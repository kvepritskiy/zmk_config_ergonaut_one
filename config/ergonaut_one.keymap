//#include "mouse.dtsi"

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2000 // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 12   // 10

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <200>;
    tapping-term-ms = <200>;
};

&mmv {
    acceleration-exponent = <1>;  // 1
    time-to-max-speed-ms = <750>; // 300
    delay-ms = <0>;
    trigger-period-ms = <8>;      // 16
};

&msc {
    acceleration-exponent = <1>;  // 0
    time-to-max-speed-ms = <40>;  // 300
    delay-ms = <0>;
    trigger-period-ms = <8>;      // 16
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    macros {
        pwd: pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp R &kp U &kp S &kp T &kp M &kp E &kp I &kp A &kp M &kp A &kp A &kp D &kp M &kp I &kp N &kp N4 &kp N2 &kp DOT>;
            label = "PWD";
        };

        ru_carret: ru_carret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp RS(N6) &kp LA(LEFT_SHIFT)>;
            label = "RU_CARRET";
        };

        ru_at: ru_at {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LS(N2) &kp LA(LEFT_SHIFT)>;
            label = "RU_AT";
        };

        ru_number: ru_number {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LS(N3) &kp LA(LEFT_SHIFT)>;
            label = "RU_NUMBER";
        };

        ru_amp: ru_amp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LS(N7) &kp LA(LEFT_SHIFT)>;
            label = "RU_AMP";
        };

        ru_dollar: ru_dollar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT) &kp LS(NUMBER_4) &kp LA(LEFT_SHIFT)>;
            label = "RU_DOLLAR";
        };
    };

    combos {
        compatible = "zmk,combos";

        mouse_combo {
            bindings = <&mo 4>;
            key-positions = <3 2 1>;
            timeout-ms = <501>;
        };
    };

    behaviors {
        ru_at_or_qu: ru_at_or_qu {
            compatible = "zmk,behavior-hold-tap";
            label = "RU_AT_OR_QU";
            bindings = <&ru_at>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        ru_hash_or_number: ru_hash_or_number {
            compatible = "zmk,behavior-hold-tap";
            label = "RU_HASH_OR_NUMBER";
            bindings = <&ru_number>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        ru_dollar_or_semicolon: ru_dollar_or_semicolon {
            compatible = "zmk,behavior-hold-tap";
            label = "RU_DOLLAR_OR_SEMICOLON";
            bindings = <&ru_dollar>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        ru_carret_or_colon: ru_carret_or_colon {
            compatible = "zmk,behavior-hold-tap";
            label = "RU_CARRET_OR_COLON";
            bindings = <&ru_carret>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        ru_amp_or_question: ru_amp_or_question {
            compatible = "zmk,behavior-hold-tap";
            label = "RU_AMP_OR_QUESTION";
            bindings = <&ru_amp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E           &kp R            &kp T      &kp Y      &kp U          &kp I      &kp O    &kp P     &kp LBKT
&kp LALT    &kp A  &kp S  &kp D           &kp F            &kp G      &kp H      &kp J          &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&kp LCTRL   &kp Z  &kp X  &kp C           &kp V            &kp B      &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                          &lt 1 LEFT_WIN  &mt LSHFT SPACE  &lt 2 RET  &lt 2 TAB  &kp BACKSPACE  &lt 1 DEL
            >;
        };

        raise_layer {
            bindings = <
&kp LGUI  &mt HOME PAGE_UP  &kp UP_ARROW    &mt END PAGE_DOWN  &kp INS  &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_NUMLOCK  &kp PLUS      &kp MINUS
&trans    &kp LEFT          &kp DOWN_ARROW  &kp RIGHT          &none    &none   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL       &kp ASTERISK  &kp SLASH
&trans    &none             &none           &none              &none    &none   &kp N7        &kp N8        &kp N9        &kp N0          &kp KP_DOT    &kp RALT
                                            &trans             &trans   &trans  &trans        &trans        &trans
            >;
        };

        lower_layer {
            bindings = <
&kp LGUI  &none  &kp F1  &kp F2   &kp F3   &kp F4   &kp EXCL                              &ru_at_or_qu 0 LS(NUMBER_2)  &ru_hash_or_number 0 LS(NUMBER_3)   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET
&trans    &none  &kp F5  &kp F6   &kp F7   &kp F8   &ru_dollar_or_semicolon 0 LS(DOLLAR)  &kp PERCENT                  &ru_carret_or_colon 0 LS(NUMBER_6)  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &mt RCTRL MINUS
&trans    &none  &kp F9  &kp F10  &kp F11  &kp F12  &ru_amp_or_question 0 LS(N7)                 &kp ASTRK                    &kp UNDERSCORE                      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RALT
                         &trans   &trans   &trans   &trans                                &trans                       &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &kp C_VOLUME_DOWN  &kp K_MUTE        &kp C_VOLUME_UP  &kp PRINTSCREEN  &none  &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &none            &none  &none
&sys_reset   &none         &none         &none         &none         &none         &none              &none             &none            &none            &none  &none
                                         &trans        &none         &trans        &none              &trans            &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &none  &none  &none   &none           &msc SCRL_UP     &none   &mkp MB1        &mmv MOVE_UP    &mkp MB2         &none  &pwd
&trans  &none  &none  &none   &msc SCRL_LEFT  &msc SCRL_RIGHT  &none   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &trans
&trans  &none  &none  &none   &none           &msc SCRL_DOWN   &trans  &trans          &trans          &none            &none  &trans
                      &trans  &trans          &trans           &trans  &trans          &trans
            >;
        };
    };
};
